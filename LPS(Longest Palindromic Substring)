class Solution {
public:
    string longestPalindrome(string s) {
    //base condition if only single element is there in a string
        if(s.length()<=1) return s ;
        int st = 0 ; int end = 0 ;
        int maxlen = 1 ;
        int n = s.length();
        //cehcking for odd strings
        for(int i =0 ; i < n -1 ; i++){
            int l = i ,   r = i ;
            while(l>=0 && r < n){
                if(s[l] == s[r]){
                    l--;
                    r++;
                }
                else 
                    break;
            }
            int len  = r-l-1;
            if(maxlen <len){
                maxlen = len ;
                st = l+1;
                end = r-1;
                
        }
    }
    //checking for even strings
        for(int i =0 ; i < n -1 ; i++){
            int l = i ; int  r = i+1 ;
            while(l>=0 && r< n){
                if(s[l] == s[r]){
                    l--;
                    r++;
                }
                else 
                    break;
            }
            int len  = r-l-1;
            if(maxlen <len){
                maxlen = len ;
                st = l+1;
                end = r-1;
                
        }
    }
        return s.substr(st,maxlen);
    }
};
